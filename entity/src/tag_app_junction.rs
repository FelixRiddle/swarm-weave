//! `SeaORM` Entity, @generated by sea-orm-codegen 1.0.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "tag-app-junction")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    #[sea_orm(column_name = "appTagName")]
    pub app_tag_name: String,
    #[sea_orm(column_name = "appName")]
    pub app_name: String,
    #[sea_orm(column_name = "createdAt")]
    pub created_at: Option<DateTime>,
    #[sea_orm(column_name = "updatedAt")]
    pub updated_at: Option<DateTime>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::app::Entity",
        from = "Column::AppName",
        to = "super::app::Column::Name",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    App,
    #[sea_orm(
        belongs_to = "super::app_tag::Entity",
        from = "Column::AppTagName",
        to = "super::app_tag::Column::Name",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    AppTag,
}

impl Related<super::app::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::App.def()
    }
}

impl Related<super::app_tag::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::AppTag.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
