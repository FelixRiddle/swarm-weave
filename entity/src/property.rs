//! `SeaORM` Entity, @generated by sea-orm-codegen 1.0.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "property")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i64,
    pub uuid: String,
    pub title: String,
    #[sea_orm(column_type = "Text")]
    pub description: String,
    pub rooms: i32,
    pub parking: i32,
    pub bathrooms: i32,
    pub street: String,
    pub latitude: String,
    pub longitude: String,
    pub published: i8,
    #[sea_orm(column_name = "createdAt")]
    pub created_at: Option<DateTime>,
    #[sea_orm(column_name = "updatedAt")]
    pub updated_at: Option<DateTime>,
    #[sea_orm(column_name = "userId")]
    pub user_id: Option<i64>,
    #[sea_orm(column_name = "categoryId")]
    pub category_id: Option<i32>,
    #[sea_orm(column_name = "priceId")]
    pub price_id: Option<i32>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::category::Entity",
        from = "Column::CategoryId",
        to = "super::category::Column::Id",
        on_update = "Cascade",
        on_delete = "SetNull"
    )]
    Category,
    #[sea_orm(has_many = "super::debug_property_image_upload::Entity")]
    DebugPropertyImageUpload,
    #[sea_orm(has_many = "super::general_property_information::Entity")]
    GeneralPropertyInformation,
    #[sea_orm(
        belongs_to = "super::price::Entity",
        from = "Column::PriceId",
        to = "super::price::Column::Id",
        on_update = "Cascade",
        on_delete = "SetNull"
    )]
    Price,
    #[sea_orm(has_many = "super::property_comment::Entity")]
    PropertyComment,
    #[sea_orm(has_many = "super::property_rating::Entity")]
    PropertyRating,
    #[sea_orm(has_many = "super::property_seller_message::Entity")]
    PropertySellerMessage,
    #[sea_orm(
        belongs_to = "super::user::Entity",
        from = "Column::UserId",
        to = "super::user::Column::Id",
        on_update = "Cascade",
        on_delete = "SetNull"
    )]
    User,
    #[sea_orm(has_many = "super::user_favorite_property::Entity")]
    UserFavoriteProperty,
}

impl Related<super::category::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Category.def()
    }
}

impl Related<super::debug_property_image_upload::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::DebugPropertyImageUpload.def()
    }
}

impl Related<super::general_property_information::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::GeneralPropertyInformation.def()
    }
}

impl Related<super::price::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Price.def()
    }
}

impl Related<super::property_comment::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::PropertyComment.def()
    }
}

impl Related<super::property_rating::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::PropertyRating.def()
    }
}

impl Related<super::property_seller_message::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::PropertySellerMessage.def()
    }
}

impl Related<super::user::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::User.def()
    }
}

impl Related<super::user_favorite_property::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::UserFavoriteProperty.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
