//! `SeaORM` Entity, @generated by sea-orm-codegen 1.0.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "folder")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i64,
    #[sea_orm(column_type = "Text")]
    pub path: String,
    pub parent_id: Option<i64>,
    pub created: Option<DateTime>,
    pub updated: Option<DateTime>,
    #[sea_orm(column_name = "lastOpened")]
    pub last_opened: Option<DateTime>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "Entity",
        from = "Column::ParentId",
        to = "Column::Id",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    SelfRef,
    #[sea_orm(has_many = "super::folder_file_junction::Entity")]
    FolderFileJunction,
}

impl Related<super::folder_file_junction::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::FolderFileJunction.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
