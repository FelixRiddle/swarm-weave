//! `SeaORM` Entity, @generated by sea-orm-codegen 1.0.0

use super::sea_orm_active_enums::Status;
use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "server-node")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i64,
    pub status: Option<Status>,
    #[sea_orm(column_name = "createdAt")]
    pub created_at: Option<DateTime>,
    #[sea_orm(column_name = "updatedAt")]
    pub updated_at: Option<DateTime>,
    #[sea_orm(column_name = "serverLocationId")]
    pub server_location_id: Option<i64>,
    #[sea_orm(column_name = "systemInfoId")]
    pub system_info_id: Option<i64>,
    #[sea_orm(column_name = "systemResourceId")]
    pub system_resource_id: Option<i64>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::server_location::Entity",
        from = "Column::ServerLocationId",
        to = "super::server_location::Column::Id",
        on_update = "Cascade",
        on_delete = "SetNull"
    )]
    ServerLocation,
    #[sea_orm(
        belongs_to = "super::system_info::Entity",
        from = "Column::SystemInfoId",
        to = "super::system_info::Column::Id",
        on_update = "Cascade",
        on_delete = "SetNull"
    )]
    SystemInfo,
    #[sea_orm(
        belongs_to = "super::system_resources::Entity",
        from = "Column::SystemResourceId",
        to = "super::system_resources::Column::Id",
        on_update = "Cascade",
        on_delete = "SetNull"
    )]
    SystemResources,
}

impl Related<super::server_location::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::ServerLocation.def()
    }
}

impl Related<super::system_info::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::SystemInfo.def()
    }
}

impl Related<super::system_resources::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::SystemResources.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
