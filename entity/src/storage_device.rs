//! `SeaORM` Entity, @generated by sea-orm-codegen 1.0.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "storage-device")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i64,
    pub total: i64,
    pub used: i64,
    pub name: String,
    #[sea_orm(column_name = "isRemovable")]
    pub is_removable: i8,
    pub kind: String,
    #[sea_orm(column_name = "systemResourceId")]
    pub system_resource_id: Option<i64>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::system_resources::Entity",
        from = "Column::SystemResourceId",
        to = "super::system_resources::Column::Id",
        on_update = "Cascade",
        on_delete = "SetNull"
    )]
    SystemResources,
}

impl Related<super::system_resources::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::SystemResources.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
