//! `SeaORM` Entity, @generated by sea-orm-codegen 1.0.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "company-staff")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i64,
    #[sea_orm(column_name = "startedAt")]
    pub started_at: Option<DateTime>,
    pub until: Option<DateTime>,
    #[sea_orm(column_name = "createdAt")]
    pub created_at: Option<DateTime>,
    #[sea_orm(column_name = "updatedAt")]
    pub updated_at: Option<DateTime>,
    #[sea_orm(column_name = "userId")]
    pub user_id: Option<i64>,
    #[sea_orm(column_name = "employeeRoleId")]
    pub employee_role_id: Option<i64>,
    #[sea_orm(column_name = "companyId")]
    pub company_id: Option<i64>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::users::Entity",
        from = "Column::UserId",
        to = "super::users::Column::Id",
        on_update = "Cascade",
        on_delete = "SetNull"
    )]
    Users,
    #[sea_orm(
        belongs_to = "super::company::Entity",
        from = "Column::CompanyId",
        to = "super::company::Column::Id",
        on_update = "Cascade",
        on_delete = "SetNull"
    )]
    Company,
    #[sea_orm(
        belongs_to = "super::employee_role::Entity",
        from = "Column::EmployeeRoleId",
        to = "super::employee_role::Column::Id",
        on_update = "Cascade",
        on_delete = "SetNull"
    )]
    EmployeeRole,
}

impl Related<super::users::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Users.def()
    }
}

impl Related<super::company::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Company.def()
    }
}

impl Related<super::employee_role::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::EmployeeRole.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
