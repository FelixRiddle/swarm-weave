//! `SeaORM` Entity, @generated by sea-orm-codegen 1.0.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "system-info")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i64,
    #[sea_orm(column_type = "Text")]
    pub name: String,
    #[sea_orm(column_name = "kernelVersion")]
    pub kernel_version: Option<String>,
    #[sea_orm(column_name = "osVersion")]
    pub os_version: String,
    pub hostname: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::server_node::Entity")]
    ServerNode,
}

impl Related<super::server_node::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::ServerNode.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
